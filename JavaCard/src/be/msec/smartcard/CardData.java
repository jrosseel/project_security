package be.msec.smartcard;

public class CardData {

	private byte[] lastValidationTime  = new byte[]{49, 52, 57, 53, 50, 57, 54, 54, 52, 53, 48, 48, 48}; // 2017/05/20 18:10:45 in milliseconds = 1495296645000;
	private byte[] nymEgov1; // unique identifier user by first service provider eGov
	private byte[] nymEgov2;
	private byte[] nymSocnet1;
	private byte[] nymSocnet2;
	private byte[] nymDefault1;
	private byte[] nymDefault2;
	private byte[] nymHealth1; // our own created domain = healthcare
	private byte[] nymHealth2;
	private final byte[] name = new byte[]{70, 114, 97, 110, 107, 105, 101, 32, 76, 111, 111, 115, 118, 101, 108, 100}; // Frankie Loosveld
	private final byte[] address = new byte[]{69, 105, 108, 97, 110, 100, 108, 97, 97, 110, 32, 52, 53}; // Eilandlaan 45;
	private final byte[] country = new byte[]{66, 69, 76, 71, 73, 85, 77}; // BELGIUM;
	private final byte[] birthDate = new byte[]{51, 48, 47, 49, 50, 47, 49, 57, 54, 53}; // 30/12/1965;
	private final byte[] age = new byte[]{53, 50}; // 52;
	private final byte[] gender = new byte[]{77}; // M;
	private final byte[] photo = new byte[]{104, 116, 116, 112, 58, 47, 47, 103, 105, 100, 115, 101, 110, 107, 111, 110, 116, 105, 99,
			104, 46, 98, 101, 47, 119, 112, 45, 99, 111, 110, 116, 101, 110, 116, 47, 117, 112, 108, 111, 
			97, 100, 115, 47, 50, 48, 49, 53, 47, 49, 48, 47, 70, 114, 97, 110, 107, 105, 101, 95, 76, 111, 
			111, 115, 118, 101, 108, 100, 46, 106, 112, 103}; 
			// http://gidsenkontich.be/wp-content/uploads/2015/10/Frankie_Loosveld.jpg;
	private final byte[] ssn = new byte[]{54, 53, 49, 50, 51, 48, 56, 48, 48, 52, 48}; // 65123080040;
	private final byte[] publicKeyCA = new byte[]{48, -126, 2, -128, 48, -126, 2, 42, -96, 3, 2, 1, 2, 2, 9, 0, -74, -62, -61, -98, 13, -50, 20, -91, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 48, -127, -103, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 22, 48, 20, 6, 3, 85, 4, 10, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 22, 48, 20, 6, 3, 85, 4, 3, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 30, 23, 13, 49, 55, 48, 51, 49, 53, 49, 53, 53, 52, 50, 55, 90, 23, 13, 50, 50, 48, 51, 49, 53, 49, 53, 53, 52, 50, 55, 90, 48, -127, -103, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 22, 48, 20, 6, 3, 85, 4, 10, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 22, 48, 20, 6, 3, 85, 4, 3, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 92, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, 75, 0, 48, 72, 2, 65, 0, -77, -52, -115, -111, 104, -62, -67, 70, 112, -63, 23, 105, -82, 86, -12, 54, 120, 104, 80, -100, -67, 78, 5, 58, -58, -86, 105, -13, 84, -35, 126, -65, -127, 107, 10, 8, -23, -77, -23, 45, 19, 112, -43, 8, 73, -87, 46, -57, 12, -110, 125, -100, -98, 95, 71, 18, -35, 46, 65, 37, 81, 126, 78, -3, 2, 3, 1, 0, 1, -93, 83, 48, 81, 48, 29, 6, 3, 85, 29, 14, 4, 22, 4, 20, -69, -18, 126, 17, -78, 103, -43, 9, 2, -83, 98, -48, -48, -12, -44, 63, -118, -40, 80, 70, 48, 31, 6, 3, 85, 29, 35, 4, 24, 48, 22, -128, 20, -69, -18, 126, 17, -78, 103, -43, 9, 2, -83, 98, -48, -48, -12, -44, 63, -118, -40, 80, 70, 48, 15, 6, 3, 85, 29, 19, 1, 1, -1, 4, 5, 48, 3, 1, 1, -1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 3, 65, 0, 104, 15, 61, 29, 8, 44, -92, -33, -4, 42, 92, -103, 39, 5, 101, -43, 81, -84, 34, -12, 54, 5, -8, 4, 79, -90, 51, 70, 69, 98, 29, -75, -126, -47, -102, -68, -73, -103, 93, -54, -116, 110, -68, 37, 125, -28, -107, 14, -2, -91, 72, -62, -126, 124, 1, 78, -110, -14, 15, -52, -63, -24, -89, 46};
    private final byte[] privateKeyCommon = new byte[]{48, -126, 2, 32, 48, -126, 1, -54, 2, 1, 1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 48, -127, -103, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 22, 48, 20, 6, 3, 85, 4, 10, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 22, 48, 20, 6, 3, 85, 4, 3, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 30, 23, 13, 49, 55, 48, 51, 49, 53, 49, 54, 51, 49, 51, 53, 90, 23, 13, 49, 57, 48, 51, 49, 53, 49, 54, 51, 49, 51, 53, 90, 48, -127, -101, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 15, 48, 13, 6, 3, 85, 4, 10, 12, 6, 99, 111, 109, 109, 111, 110, 49, 15, 48, 13, 6, 3, 85, 4, 11, 12, 6, 99, 111, 109, 109, 111, 110, 49, 14, 48, 12, 6, 3, 85, 4, 3, 12, 5, 107, 97, 97, 114, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 92, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, 75, 0, 48, 72, 2, 65, 0, -58, 88, -3, -67, -12, 108, 65, -122, 16, 33, 47, -51, 105, 122, -89, 20, -29, -85, -89, 14, -57, -58, -118, 61, 105, -40, -15, 14, -117, 42, -87, 93, 74, 104, -52, 114, 91, -14, -87, 90, 86, 44, -20, 111, 63, 64, 2, -7, 65, -6, -42, -59, 32, 20, -36, -5, 57, -89, -61, -79, 10, -43, 82, -73, 2, 3, 1, 0, 1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 3, 65, 0, 86, -125, -124, 27, -123, 122, -41, 84, 90, 17, -39, 78, -23, 61, 63, 86, 90, -121, 56, 92, 71, -7, 106, -22, 69, -30, 2, 3, -110, 48, -64, 106, 95, -97, 58, 103, 86, -88, 21, -5, -54, 32, -11, 4, -23, -60, -36, 76, 76, -83, -71, -82, 121, 81, -106, -40, -19, 51, -31, -118, 33, 49, -98, -43};
    private final byte[] certificateCommon = new byte[]{48, -126, 2, 32, 48, -126, 1, -54, 2, 1, 1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 48, -127, -103, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 22, 48, 20, 6, 3, 85, 4, 10, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 22, 48, 20, 6, 3, 85, 4, 3, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 30, 23, 13, 49, 55, 48, 51, 49, 53, 49, 54, 51, 49, 51, 53, 90, 23, 13, 49, 57, 48, 51, 49, 53, 49, 54, 51, 49, 51, 53, 90, 48, -127, -101, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 15, 48, 13, 6, 3, 85, 4, 10, 12, 6, 99, 111, 109, 109, 111, 110, 49, 15, 48, 13, 6, 3, 85, 4, 11, 12, 6, 99, 111, 109, 109, 111, 110, 49, 14, 48, 12, 6, 3, 85, 4, 3, 12, 5, 107, 97, 97, 114, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 92, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, 75, 0, 48, 72, 2, 65, 0, -58, 88, -3, -67, -12, 108, 65, -122, 16, 33, 47, -51, 105, 122, -89, 20, -29, -85, -89, 14, -57, -58, -118, 61, 105, -40, -15, 14, -117, 42, -87, 93, 74, 104, -52, 114, 91, -14, -87, 90, 86, 44, -20, 111, 63, 64, 2, -7, 65, -6, -42, -59, 32, 20, -36, -5, 57, -89, -61, -79, 10, -43, 82, -73, 2, 3, 1, 0, 1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 3, 65, 0, 86, -125, -124, 27, -123, 122, -41, 84, 90, 17, -39, 78, -23, 61, 63, 86, 90, -121, 56, 92, 71, -7, 106, -22, 69, -30, 2, 3, -110, 48, -64, 106, 95, -97, 58, 103, 86, -88, 21, -5, -54, 32, -11, 4, -23, -60, -36, 76, 76, -83, -71, -82, 121, 81, -106, -40, -19, 51, -31, -118, 33, 49, -98, -43};
    //private final byte[] privateKeyCard = new byte[]{48, -126, 2, 32, 48, -126, 1, -54, 2, 1, 1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 48, -127, -103, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 22, 48, 20, 6, 3, 85, 4, 10, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 22, 48, 20, 6, 3, 85, 4, 3, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 30, 23, 13, 49, 55, 48, 51, 49, 53, 49, 54, 51, 49, 51, 53, 90, 23, 13, 49, 57, 48, 51, 49, 53, 49, 54, 51, 49, 51, 53, 90, 48, -127, -101, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 15, 48, 13, 6, 3, 85, 4, 10, 12, 6, 99, 111, 109, 109, 111, 110, 49, 15, 48, 13, 6, 3, 85, 4, 11, 12, 6, 99, 111, 109, 109, 111, 110, 49, 14, 48, 12, 6, 3, 85, 4, 3, 12, 5, 107, 97, 97, 114, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 92, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, 75, 0, 48, 72, 2, 65, 0, -58, 88, -3, -67, -12, 108, 65, -122, 16, 33, 47, -51, 105, 122, -89, 20, -29, -85, -89, 14, -57, -58, -118, 61, 105, -40, -15, 14, -117, 42, -87, 93, 74, 104, -52, 114, 91, -14, -87, 90, 86, 44, -20, 111, 63, 64, 2, -7, 65, -6, -42, -59, 32, 20, -36, -5, 57, -89, -61, -79, 10, -43, 82, -73, 2, 3, 1, 0, 1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 3, 65, 0, 86, -125, -124, 27, -123, 122, -41, 84, 90, 17, -39, 78, -23, 61, 63, 86, 90, -121, 56, 92, 71, -7, 106, -22, 69, -30, 2, 3, -110, 48, -64, 106, 95, -97, 58, 103, 86, -88, 21, -5, -54, 32, -11, 4, -23, -60, -36, 76, 76, -83, -71, -82, 121, 81, -106, -40, -19, 51, -31, -118, 33, 49, -98, -43};
	private final byte[] publicKeyGovernment = new byte[]{48, -126, 2, 32, 48, -126, 1, -54, 2, 1, 1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 48, -127, -103, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 22, 48, 20, 6, 3, 85, 4, 10, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 22, 48, 20, 6, 3, 85, 4, 3, 12, 13, 77, 105, 99, 104, 105, 101, 108, 32, 68, 104, 111, 110, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 30, 23, 13, 49, 55, 48, 51, 49, 53, 49, 54, 51, 49, 51, 53, 90, 23, 13, 49, 57, 48, 51, 49, 53, 49, 54, 51, 49, 51, 53, 90, 48, -127, -101, 49, 11, 48, 9, 6, 3, 85, 4, 6, 19, 2, 66, 69, 49, 24, 48, 22, 6, 3, 85, 4, 8, 12, 15, 79, 111, 115, 116, 45, 86, 108, 97, 97, 110, 100, 101, 114, 101, 110, 49, 14, 48, 12, 6, 3, 85, 4, 7, 12, 5, 90, 117, 108, 116, 101, 49, 15, 48, 13, 6, 3, 85, 4, 10, 12, 6, 99, 111, 109, 109, 111, 110, 49, 15, 48, 13, 6, 3, 85, 4, 11, 12, 6, 99, 111, 109, 109, 111, 110, 49, 14, 48, 12, 6, 3, 85, 4, 3, 12, 5, 107, 97, 97, 114, 116, 49, 48, 48, 46, 6, 9, 42, -122, 72, -122, -9, 13, 1, 9, 1, 22, 33, 109, 105, 99, 104, 105, 101, 108, 46, 100, 104, 111, 110, 116, 64, 115, 116, 117, 100, 101, 110, 116, 46, 107, 117, 108, 101, 117, 118, 101, 110, 46, 98, 101, 48, 92, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, 75, 0, 48, 72, 2, 65, 0, -58, 88, -3, -67, -12, 108, 65, -122, 16, 33, 47, -51, 105, 122, -89, 20, -29, -85, -89, 14, -57, -58, -118, 61, 105, -40, -15, 14, -117, 42, -87, 93, 74, 104, -52, 114, 91, -14, -87, 90, 86, 44, -20, 111, 63, 64, 2, -7, 65, -6, -42, -59, 32, 20, -36, -5, 57, -89, -61, -79, 10, -43, 82, -73, 2, 3, 1, 0, 1, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 11, 5, 0, 3, 65, 0, 86, -125, -124, 27, -123, 122, -41, 84, 90, 17, -39, 78, -23, 61, 63, 86, 90, -121, 56, 92, 71, -7, 106, -22, 69, -30, 2, 3, -110, 48, -64, 106, 95, -97, 58, 103, 86, -88, 21, -5, -54, 32, -11, 4, -23, -60, -36, 76, 76, -83, -71, -82, 121, 81, -106, -40, -19, 51, -31, -118, 33, 49, -98, -43};
	
	public CardData(){}
	/**
	 * @return the lastValidationTime
	 */
	public byte[] getLastValidationTime() {
		return lastValidationTime;
	}
	/**
	 * @param lastValidationTime the lastValidationTime to set
	 */
	public void setLastValidationTime(byte[] lastValidationTime) {
		this.lastValidationTime = lastValidationTime;
	}
	/**
	 * @return the nymEgov1
	 */
	public byte[] getNymEgov1() {
		return nymEgov1;
	}
	/**
	 * @param nymEgov1 the nymEgov1 to set
	 */
	public void setNymEgov1(byte[] nymEgov1) {
		this.nymEgov1 = nymEgov1;
	}
	/**
	 * @return the nymEgov2
	 */
	public byte[] getNymEgov2() {
		return nymEgov2;
	}
	/**
	 * @param nymEgov2 the nymEgov2 to set
	 */
	public void setNymEgov2(byte[] nymEgov2) {
		this.nymEgov2 = nymEgov2;
	}
	/**
	 * @return the nymSocnet1
	 */
	public byte[] getNymSocnet1() {
		return nymSocnet1;
	}
	/**
	 * @param nymSocnet1 the nymSocnet1 to set
	 */
	public void setNymSocnet1(byte[] nymSocnet1) {
		this.nymSocnet1 = nymSocnet1;
	}
	/**
	 * @return the nymSocnet2
	 */
	public byte[] getNymSocnet2() {
		return nymSocnet2;
	}
	/**
	 * @param nymSocnet2 the nymSocnet2 to set
	 */
	public void setNymSocnet2(byte[] nymSocnet2) {
		this.nymSocnet2 = nymSocnet2;
	}
	/**
	 * @return the nymDefault1
	 */
	public byte[] getNymDefault1() {
		return nymDefault1;
	}
	/**
	 * @param nymDefault1 the nymDefault1 to set
	 */
	public void setNymDefault1(byte[] nymDefault1) {
		this.nymDefault1 = nymDefault1;
	}
	/**
	 * @return the nymDefault2
	 */
	public byte[] getNymDefault2() {
		return nymDefault2;
	}
	/**
	 * @param nymDefault2 the nymDefault2 to set
	 */
	public void setNymDefault2(byte[] nymDefault2) {
		this.nymDefault2 = nymDefault2;
	}
	/**
	 * @return the nymHealth1
	 */
	public byte[] getNymHealth1() {
		return nymHealth1;
	}
	/**
	 * @param nymHealth1 the nymHealth1 to set
	 */
	public void setNymHealth1(byte[] nymHealth1) {
		this.nymHealth1 = nymHealth1;
	}
	/**
	 * @return the nymHealth2
	 */
	public byte[] getNymHealth2() {
		return nymHealth2;
	}
	/**
	 * @param nymHealth2 the nymHealth2 to set
	 */
	public void setNymHealth2(byte[] nymHealth2) {
		this.nymHealth2 = nymHealth2;
	}
	/**
	 * @return the name
	 */
	public byte[] getName() {
		return name;
	}
	/**
	 * @return the address
	 */
	public byte[] getAddress() {
		return address;
	}
	/**
	 * @return the country
	 */
	public byte[] getCountry() {
		return country;
	}
	/**
	 * @return the birthDate
	 */
	public byte[] getBirthDate() {
		return birthDate;
	}
	/**
	 * @return the age
	 */
	public byte[] getAge() {
		return age;
	}
	/**
	 * @return the gender
	 */
	public byte[] getGender() {
		return gender;
	}
	/**
	 * @return the photo
	 */
	public byte[] getPhoto() {
		return photo;
	}
	/**
	 * @return the ssn
	 */
	public byte[] getSsn() {
		return ssn;
	}
	/**
	 * @return the publicKeyCA
	 */
	public byte[] getPublicKeyCA() {
		return publicKeyCA;
	}
	/**
	 * @return the privateKeyCommon
	 */
	public byte[] getPrivateKeyCommon() {
		return privateKeyCommon;
	}
	/**
	 * @return the certificateCommon
	 */
	public byte[] getCertificateCommon() {
		return certificateCommon;
	}
	/**
	 * @return the publicKeyGovernment
	 */
	public byte[] getPublicKeyGovernment() {
		return publicKeyGovernment;
	}
	
	
}
